# Server configuration
DOCKER_REPO=
CLI_IMG_TAG=brojonat/abb-cli:v1.0
ENV=example
SERVER_PORT=8080

ABB_API_ENDPOINT=http://localhost:8080
ABB_PUBLIC_BASE_URL=https://incentivizethis.com
ABB_SECRET_KEY=your_server_secret_key
ABB_AUTH_TOKEN=your_auth_token
BMC_WEBHOOK_SECRET=your_webhook_secret

# CORS Configuration
CORS_HEADERS=Content-Type,Authorization
CORS_METHODS=GET,POST,OPTIONS
CORS_ORIGINS=*

# Temporal configuration
TEMPORAL_ADDRESS=localhost:7233
TEMPORAL_NAMESPACE=affiliate-bounty-board
TASK_QUEUE=abb-default

# Publishing bounties
PERIODIC_PUBLISHER_SCHEDULE_ID=periodic-publisher
PERIODIC_PUBLISHER_SCHEDULE_INTERVAL=24h

# solana configuration
SOLANA_RPC_ENDPOINT=https://api.devnet.solana.com
SOLANA_WS_ENDPOINT=wss://api.devnet.solana.com
# Funder/Owner wallets are the funder/owner of the bounty; they're responsible
# for administering the bounty. In most cases they are the same wallet, but
# while we get this project off the ground, we might be funding from one wallet
# but paying out refunds to a different one.
SOLANA_TEST_FUNDER_WALLET=your_test_funder_wallet
SOLANA_TEST_FUNDER_PRIVATE_KEY=your_test_funder_private_key
SOLANA_TEST_OWNER_WALLET=your_test_owner_wallet
# Creator wallets are the actual creator users that send us the content
# and receive the reward payout
SOLANA_TEST_CREATOR_WALLET=your_test_creator_wallet
# The escrow wallet is responsible for holding all the funds that are eligible
# to be paid out to bounties. We need the private key because we'll be sending
# funds out from this wallet.
SOLANA_ESCROW_WALLET=your_escrow_wallet
SOLANA_ESCROW_PRIVATE_KEY=your_escrow_private_key
SOLANA_TREASURY_WALLET=your_treasury_wallet
SOLANA_USDC_MINT_ADDRESS=your_usdc_mint
